#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "system.h"
#include "sys/alt_stdio.h"

#define CHARLIM 256
#define QUIT_LETTER '~'

void process_message(char *input, char *response) {
    char command[CHARLIM + 50];  // Buffer for shell command
    FILE *fp;

    // Construct the command to call Python script
    snprintf(command, sizeof(command), "python3 server.py \"%s\"", input);

    // Open a pipe to execute the Python script and read its output
    fp = popen(command, "r");
    if (fp == NULL) {
        snprintf(response, CHARLIM, "Error: Failed to execute Python script\n");
        return;
    }

    // Read the response from the Python script
    if (fgets(response, CHARLIM, fp) == NULL) {
        snprintf(response, CHARLIM, "Error: No response from Python script\n");
    }

    // Close the pipe
    pclose(fp);
}

int main() {
    char input[CHARLIM] = {0};
    char response[CHARLIM] = {0};
    int idx = 0;
    char c;

    alt_putstr("FPGA Ready. Send a message:\n");

    while (1) {
        c = alt_getchar(); // Wait for a character from UART
        if (c == QUIT_LETTER) {
            alt_putstr("Quitting...\n");
            break;
        }
        if (c == '\n') { // End of message
            input[idx] = '\0'; // Null-terminate the string
            process_message(input, response); // Process input
            alt_putstr(response); // Send response to UART
            idx = 0; // Reset buffer index
        } else {
            input[idx++] = c; // Store character
            if (idx >= CHARLIM - 1) { // Prevent overflow
                idx = 0;
            }
        }
    }
    return 0;
}
